{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/table/table.component.ts","./src/app/components/table/table.component.html","./src/app/layouts/footer/footer.component.ts","./src/app/layouts/footer/footer.component.html","./src/app/layouts/header/header.component.ts","./src/app/layouts/header/header.component.html","./src/app/models/data.ts","./src/app/services/api-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TableComponent } from \"../app/components/table/table.component\";\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component:TableComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularCorona';\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './layouts/header/header.component';\nimport { FooterComponent } from './layouts/footer/footer.component';\nimport { TableComponent } from './components/table/table.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    TableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiServiceService } from 'src/app/services/api-service.service';\nimport { AllData, CountriesData } from 'src/app/models/data';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n  alldata = new AllData();\n  countryData:CountriesData[];\n  constructor(private apidata:ApiServiceService, public router:Router) { }\n\n  ngOnInit(): void {\n    this.apidata.getDataFromServer(\"countries\").subscribe((data)=>{\n      this.countryData=data;\n    });\n\n    this.apidata.getDataFromServerTwo(\"all\").subscribe((getAllData)=>{\n      this.alldata=getAllData;\n    })\n  }\n\n}\n","<div class=\"table\">\n    <div class=\"card bg-dark text-white\">\n        <div class=\"card-body\"> CoronaVirus Cases\n            <table class=\"table table-dark\">\n                <thead>\n                    <tr class=\"ineedcolor\">\n                        <th>Total Cases</th>\n                        <th>Today Total cases</th>\n                        <th>Total Deaths</th>\n                        <th>Today Deaths</th>\n                        <th>Total Recovered</th>\n                        <th>Total Active</th>\n                        <th>Total Critical</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{{alldata.cases}}</td>\n                        <td class=\"green-txt\">{{alldata.todayCases}}</td>\n                        <td class=\"green-txt\">{{alldata.deaths}}</td>\n                        <td class=\"red-txt\">{{alldata.todayDeaths}}</td>\n                        <td class=\"red-txt\">{{alldata.recovered}}</td>\n                        <td class=\"blue-txt\">{{alldata.active}}</td>\n                        <td class=\"blue-txt\">{{alldata.critical}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <table class=\"table table-dark\">\n\n        <thead>\n            <tr>\n                <th class=\"th-sm\">S.N\n                </th>\n                <th class=\"th-sm\">Country\n                </th>\n                <th class=\"th-sm\">Total Cases\n                </th>\n                <th class=\"th-sm\">Today Cases\n                </th>\n                <th class=\"th-sm\">Total Deaths\n                </th>\n                <th class=\"th-sm\">Today Deaths\n                </th>\n                <th class=\"th-sm\">Recovered</th>\n                <th class=\"th-sm\">Active Cases\n                </th>\n                <th class=\"th-sm\">Critical\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let data of countryData ; let i=index\">\n                <td>{{i+1}}</td>\n                <td>{{data.country}}</td>\n                <td class=\"green-txt\">{{data.cases}}</td>\n                <td class=\"green-txt\">{{data.todayCases}}</td>\n                <td class=\"red-txt\">{{data.deaths}}</td>\n                <td class=\"red-txt\">{{data.todayDeaths}}</td>\n                <td class=\"blue-txt\">{{data.recovered}}</td>\n                <td class=\"blue-txt\">{{data.active}}</td>\n                <td class=\"yellow-txt\">{{data.critical}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<footer class=\"page-footer font-small special-color-dark pt-4\">\n\n    <!-- Footer Elements -->\n    <div class=\"container\">\n  \n      <!-- Social buttons -->\n      <ul class=\"list-unstyled list-inline text-center\">\n        <li class=\"list-inline-item\">\n          <a class=\"btn-floating btn-fb mx-1\">\n            <i class=\"fab fa-facebook-f\"> </i>\n          </a>\n        </li>\n        <li class=\"list-inline-item\">\n          <a class=\"btn-floating btn-tw mx-1\">\n            <i class=\"fab fa-twitter\"> </i>\n          </a>\n        </li>\n        <li class=\"list-inline-item\">\n          <a class=\"btn-floating btn-gplus mx-1\">\n            <i class=\"fab fa-google-plus-g\"> </i>\n          </a>\n        </li>\n        <li class=\"list-inline-item\">\n          <a class=\"btn-floating btn-li mx-1\">\n            <i class=\"fab fa-linkedin-in\"> </i>\n          </a>\n        </li>\n        <li class=\"list-inline-item\">\n          <a class=\"btn-floating btn-dribbble mx-1\">\n            <i class=\"fab fa-dribbble\"> </i>\n          </a>\n        </li>\n      </ul>\n      <!-- Social buttons -->\n  \n    </div>\n    <!-- Footer Elements -->\n  \n    <!-- Copyright -->\n    <div class=\"footer-copyright text-center py-3\">© 2020 Copyright:\n      <a href=\"https://roshanlasiwa.com.np/\"> Roshan Lasiwa</a>\n    </div>\n    <!-- Copyright -->\n  \n  </footer>\n  <!-- Footer -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--Navbar-->\n<nav class=\"navbar navbar-expand-lg navbar-dark table-dark\">\n\n    <!-- Navbar brand -->\n    <a class=\"navbar-brand\" href=\"#\">Corona</a>\n\n    <!-- Collapse button -->\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n        aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <!-- Collapsible content -->\n    <div class=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n\n        <!-- Links -->\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"#\">Home\n                    <span class=\"sr-only\">(current)</span>\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">FAQ</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Pricing</a>\n            </li>\n\n\n        </ul>\n        <!-- Links -->\n\n    </div>\n    <!-- Collapsible content -->\n\n</nav>\n<!--/.Navbar-->","export class AllData {\r\n  cases: number;\r\n  todayCases: number;\r\n  deaths: number;\r\n  todayDeaths: number;\r\n  recovered: number;\r\n  active: number;\r\n  critical: number;\r\n}\r\n\r\nexport class CountriesData{\r\n    country: string;\r\n    countryInfo:{\r\n        _id:number;\r\n        iso2:string;\r\n        iso3:string;\r\n    };\r\n    cases:number;\r\n    todayCases:number;\r\n    deaths:number;\r\n    todayDeaths:number;\r\n    recovered:number;\r\n    active:number;\r\n    critical:number;\r\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { AllData, CountriesData } from \"../models/data\";\n\nconst httpOption = {\n  headers: new HttpHeaders({\n    \"content-type\": \"application/json\",\n  }),\n};\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ApiServiceService {\n  apiUrl: string = \"https://corona.lmao.ninja/v2\";\n  constructor(private http: HttpClient) {}\n\n  //Get Data from Server\n  getDataFromServer(name): Observable<CountriesData[]> {\n    return this.http.get<CountriesData[]>(`${this.apiUrl}/${name}`, httpOption);\n  }\n\n  getDataFromServerTwo(name): Observable<AllData> {\n    return this.http.get<AllData>(`${this.apiUrl}/${name}`, httpOption);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}